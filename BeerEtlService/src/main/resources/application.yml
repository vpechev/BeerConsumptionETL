# Configuration for the acquired port by the service
server:
  port: 8082

# Logging level configuration
logging:
  level:
    root: info

# Health check endpoint configuration
endpoints:
  health:
    enabled: true
    web:
      path: health

#management:
#  security:
#    enabled: false
#  health:
#    binders:
#      enabled: false
#    rabbit:
#      enabled: false
#  info:
#    git:
#      mode: full

# Spring configuration


#spring.jpa.show-sql=true
#spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.hibernate.ddl-auto = create-drop

spring:
  datasource:
    url: jdbc:sqlserver://localhost:1433
    databaseName: Beer
    username: sa
    password: My_pa77min878
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
  jpa:
    repositories:
      enabled: true
    database: SQL_SERVER
    hibernate:
        ddl-auto: update
        naming:
            physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        properties:
            hibernate:
                dialect: org.hibernate.dialect.SQLServer2012Dialect
                hbm2ddl:
                  auto: update
  data:
    mongodb:
      host: localhost
      port: 27017
      database: beer
  application:
    name: beer-etl
  cloud:
    stream:
      bindings:
        output:
          contentType: application/json
          destination: topic.beer.sql.data
          binder: rabbit
        input:
          destination: queue.beer
          group: data
          binder: rabbit
      binders:
        rabbit:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: localhost
                port: 5671
                username: admin
                password: admin
                virtual-host: /
                ssl:
                  enabled: false
      rabbit:
        bindings:
          output:
            producer:
              declareExchange: false
              routing-key-expression: "'key.beer.data'"